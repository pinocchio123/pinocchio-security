server:
  tomcat:
    uri-encoding: UTF-8
    max-threads: 1000
    min-spare-threads: 30
  port: 8080
  servlet:
    context-path: /pinocchio-admin

spring:
  thymeleaf:
    cache: false
  profiles:
    active: dev
  mvc:
    view:
      prefix: /templates/
      suffix: .html
  jackson:
    time-zone: GMT+8
    date-format: yyyy/MM/dd HH:mm:ss
  redis:
    host: localhost
    port: 6379
    password:
    timeout: 1000
  #quartz相关配置
  quartz:
    properties:
      org:
        quartz:
          scheduler:
            instanceName: clusteredScheduler #调度器实例名称
            instanceId: AUTO #调度器实例编号自动生成
          jobStore:
            class: org.quartz.impl.jdbcjobstore.JobStoreTX #持久化方式配置
            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate #持久化方式配置数据驱动，MySQL数据库
            tablePrefix: qrtz_ #quartz相关数据表前缀名
            isClustered: true #开启分布式部署
            clusterCheckinInterval: 10000 #分布式节点有效性检查时间间隔，单位：毫秒
            useProperties: false #配置是否使用
          threadPool:
            class: org.quartz.simpl.SimpleThreadPool #线程池实现类
            threadCount: 10 #执行最大并发线程数量
            threadPriority: 5 #线程优先级
            threadsInheritContextClassLoaderOfInitializingThread: true #配置是否启动自动加载数据库内的定时任务，默认true
    job-store-type: jdbc


pagehelper:
  supportMethodsArguments: true
  reasonable: true
  helperDialect: mysql
  params: count=countSql
mybatis:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.pinocchio.security.model
mapper:
  identity: MYSQL
  not-empty: false
  mappers: com.pinocchio.security.util.MyMapper

logging:
  config: src/main/resources/log4j2.xml
grpc:
  port: 8088

#kafka:
#    consumer:
#        auto:
#            commit:
#               interval: 100
#            offset:
#               reset: latest
#       concurrency: 10
#        enable:
#            auto:
#                commit: false
#        group:
#            id: test
#        servers: 192.168.2.184:9092
#        session:
#            timeout: 6000
#        topic: test
#        zookeeper:
#            connect: 192.168.2.184:2181
#   producer:
#        batch:
#            size: 4096
#        buffer:
#            memory: 40960
#        linger: 1
#        retries: 0
#        servers: 192.168.2.184:9092


mqtt:
  username: admin
  password: password
  #url: tcp://127.0.0.1:11883
  url: tcp://125.70.231.243:63613
  producer:
    clientId: mqttProducer2
    defaultTopic: creq/199
  consumer:
    clientId: mqttConsumer2
    defaultTopic: creq/199
#  # 密码
#  mqtt.password=password
#  # 推送信息的连接地址，如果有多个，用逗号隔开，如：tcp://127.0.0.1:61613,tcp://192.168.1.61:61613
#  mqtt.url=tcp://127.0.0.1:61613
#  ##################
#  #  MQTT 生产者
#  ##################
#  # 连接服务器默认客户端ID
#  mqtt.producer.clientId=mqttProducer
#  # 默认的推送主题，实际可在调用接口时指定
#  mqtt.producer.defaultTopic=topic1
#  ##################
#  #  MQTT 消费者
#  ##################
#  # 连接服务器默认客户端ID
#  mqtt.consumer.clientId=mqttConsumer
#  # 默认的接收主题，可以订阅多个Topic，逗号分隔
#  mqtt.consumer.defaultTopic=topic1
